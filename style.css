:root {
    --calculatorHeight: 700px;
    /*declaring css variables*/
    --calculatorWidth: 550px;
    /*variables do not have to be declared in root*/
    --screenHeight: 250px;
    /*but declaring in root ensures they can be accessed anywhere*/
    --screenWidth: 530px;
    --buttonContainerHeight: calc(var(--calculatorHeight) - var(--screenHeight) - 30px);
    /*need to include spaces on both sides of operator or doesn't work*/
    --buttonWidth: calc(var(--screenWidth) / 4);
}

#calculator {
    background-color: lightgray;
    height: var(--calculatorHeight);
    width: var(--calculatorWidth);
    position: absolute;
    /* This section of code centers item vertically on page. */
    top: 0;
    /*Only works if element has set height*/
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}

#screen {
    background-color: black;
    height: var(--screenHeight);
    width: var(--screenWidth);
    display: flex;
    justify-content: end;
    align-items: end;
    margin-top: 10px;
    margin-left: auto;
    margin-right: auto;
}

#numberText {
    color: steelblue;
    font-size: 72px;
    margin-right: 10px;
}

#buttonContainer {
    height: var(--buttonContainerHeight);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    margin: 10px;
}

.row {
    height: calc(var(--buttonContainerHeight) / 5);
    /*This one did not work when I specified the unit after 5...*/
    width: var(--screenWidth);
    /*same as screen width for consistency*/
    display: flex;
    justify-content: space-around;
}

button {
    height: auto;
    width: var(--buttonWidth);
    /* row width / number of buttons in row*/
    margin: 5px;
}

#clearButton {
    width: calc(var(--buttonWidth) * 2 + 10px);
    /*does not work with all numbers having units and does not work with no numbers having units*/
}

#enterButton {
    width: calc(var(--buttonWidth) * 2 + 10px);
}