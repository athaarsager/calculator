:root {
    --calculatorHeight: 700px;
    /*declaring css variables*/
    --calculatorWidth: 550px;
    /*variables do not have to be declared in root*/
    --screenHeight: 250px;
    /*but declaring in root ensures they can be accessed anywhere*/
    --screenWidth: 530px;
    --buttonContainerHeight: calc(var(--calculatorHeight) - var(--screenHeight) - 30px);
    /*need to include spaces on both sides of operator or doesn't work*/
    --buttonWidth: calc(var(--screenWidth) / 4);
    --buttonColor: rgb(116, 156, 181);
}

body {
    background-color: rgba(66, 55, 112, 0.309)
}

#calculator {
    border: 1px solid black;
    border-radius: 10px;
    background-color: rgb(151, 182, 201);
    height: var(--calculatorHeight);
    width: var(--calculatorWidth);
    position: absolute;
    /* This section of code centers item vertically on page. */
    top: 0;
    /*Only works if element has set height*/
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}

#screen {
    background-color: black;
    border-radius: 10px;
    height: var(--screenHeight);
    width: var(--screenWidth);
    display: flex;
    justify-content: end;
    align-items: end;
    margin-top: 10px;
    margin-left: auto;
    margin-right: auto;
}

#screenText {
    color: rgb(228, 218, 218);
    font-size: 72px;
    margin-right: 10px;
    margin-left: 10px;
}

#buttonContainer {
    height: var(--buttonContainerHeight);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    margin: 10px;
}

.row {
    height: calc(var(--buttonContainerHeight) / 5);
    /*This one did not work when I specified the unit after 5...*/
    width: calc(var(--screenWidth) + 10px);
    /*same as screen width for consistency + 10 to account for margins*/
    display: flex;
    justify-content: space-around;
}

button {
    background-color: hsl(203, 31%, 58%);
    border: none;/*This eliminates awkward border created by border-radius*/
    border-radius: 25px;
    height: auto;
    width: var(--buttonWidth);
    /* row width / number of buttons in row*/
    margin: 5px;
}

.numberButton:hover {
    background-color: hsl(203.07692307692307, 30.516431924882635%, 63.235294117647065%);
}

.numberButton:active {
    background-color: hsl(203.07692307692307, 30.516431924882635%, 48.235294117647065%);
}

.otherButton {
    background-color: hsl(205, 75%, 76%);
}

.otherButton:hover {
    background-color: hsl(205, 75%, 81%);
}

.otherButton:active {
    background-color: hsl(205, 75%, 66%);
}

.operation {
    background-color:hsl(33, 91%, 70%);
}

.operation:hover {
    background-color: hsl(33, 91%, 75%);
}

.operation:active {
    background-color: hsl(33, 91%, 60%);
}

#zeroButton {
    width: calc(var(--buttonWidth) * 2 + 10px);
}